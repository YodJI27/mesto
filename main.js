(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o){var i=e.item,c=e.handleCardClick,u=e.checkLikes,a=e.deletedCards;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=i.name,this._link=i.link,this._idUser=i.owner._id,this._likeCards=i.likes.length,this._likes=i.likes,this._template=n,this._handleCardClick=c,this._deleteCardsPopup=r,this._apiCards=o,this._cardDeleteApi=a,this._checkLikes=u,this._editName=document.querySelector(".profile__author").textContent}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".cards__item").cloneNode(!0)}},{key:"checkForId",value:function(e){this._idUser!==e&&this._buttonDelete.classList.add("cards__delete_inactive")}},{key:"_likeCount",value:function(e){e.length?this._cardsLike.textContent=e.length:this._cardsLike.textContent=""}},{key:"checkMyLikes",value:function(e){var t=this;this._likes.some((function(n){e===n._id&&t._likeButton.classList.add("cards__like_active")}))}},{key:"_clickLike",value:function(e){this._checkLikes(e)}},{key:"_deleteCards",value:function(){this._element.remove(),this._deleteCardsPopup.closeFormDeleteCards(),this._element=null}},{key:"_deleteCardsFunction",value:function(){var e=this;document.querySelector(".popup__delete_button").addEventListener("click",(function(){e._cardDeleteApi()}))}},{key:"_setEventListener",value:function(){var e=this;this._element.querySelector(".cards__like").addEventListener("click",(function(t){e._clickLike(t)})),this._element.querySelector(".cards__delete").addEventListener("click",(function(){e._deleteCardsPopup.open(),e._deleteCardsFunction()})),this._cardValue.addEventListener("click",(function(){e._handleCardClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardValue=this._element.querySelector(".cards__image"),this._buttonDelete=this._element.querySelector(".cards__delete"),this._cardsLike=this._element.querySelector(".cards__like_count"),this._likeButton=this._element.querySelector(".cards__like"),this._setEventListener(),this._element.querySelector(".cards__text").textContent=this._name,this._cardValue.src=this._link,this._cardValue.alt=this._name,this._cardsLike.textContent=this._likeCards,this._element}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=document.querySelector(t),this._inputList=Array.from(this._form.querySelectorAll(n.popupText)),this._popupButton=this._form.querySelector(n.popupButton),this._popupTextNameError=n.popupTextNameError,this._popupButonActive=n.popupButonActive}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._popupTextNameError),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._popupTextNameError),t.textContent=""}},{key:"removeError",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasNotValidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e){this._hasNotValidInput(e)?this.buttonActive():this.buttonFalse()}},{key:"buttonActive",value:function(){this._popupButton.classList.add(this._popupButonActive),this._popupButton.setAttribute("disabled",!0)}},{key:"buttonFalse",value:function(){this._popupButton.classList.remove(this._popupButonActive),this._popupButton.removeAttribute("disabled")}},{key:"_setEventListener",value:function(){var e=this,t=this._inputList;t.forEach((function(n){n.addEventListener("input",(function(){e._isValid(n),e._toggleButtonState(t)}))})),this._toggleButtonState(t)}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this.buttonFalse(),this._setEventListener()}}])&&n(t.prototype,r),e}(),o={formSelector:".popup__container",formSelectorCards:".popup__container_cards_item",formSelectorAvatar:".popup__container_edit_avatar",popupText:".popup__text",popupButton:".popup__button",popupTextNameError:"popup__text_name_error",popupButonActive:"popup__button_active_not"},i=(document.querySelector(".popup"),document.querySelector(".delete__cards"),document.querySelector(".profile__edit_open_popup")),c=document.querySelector(".profile__add"),u=document.querySelector(".popup__text_name_input"),a=document.querySelector(".popup__text_job_input"),s=(document.querySelector(".profile__author"),document.querySelector(".profile__description"),document.querySelector(".popup__container"),document.querySelector(".photo"),document.querySelector(".photo__image")),l=document.querySelector(".photo__text"),p=(document.querySelector(".popup_cards"),document.querySelector(".popup__text_name_cards"),document.querySelector(".popup__text_job_cards"),document.querySelector(".popup__button_save_form")),f=document.querySelector(".popup__button_form_save"),_=(document.getElementById("name-input-error"),document.getElementById("job-input-error"),document.getElementById("input-name-error"),document.getElementById("url-input-error"),document.querySelector(".cards")),h=(document.querySelector(".cards__like_count"),document.querySelector(".popup__avatar"),document.querySelector(".profile__avatar")),d=document.querySelector(".popup__button_avatar_form"),y=document.querySelector(".profile__image");function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelectorAll(".popup__delete_button");var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(t){e.close()})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&v(t.prototype,n),e}();function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t,n){return(S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__container"),n._formInputs=n._popup.querySelectorAll(".popup__text"),n.setEventListeners(),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._case={},this._formInputs.forEach((function(t){e._case[t.name]=t.value})),this._case}},{key:"close",value:function(){S(C(c.prototype),"close",this).call(this),this._form.reset()}},{key:"closeFormDeleteCards",value:function(){S(C(c.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(){e._handleFormSubmit(e._getInputValues()),e.close()})),S(C(c.prototype),"setEventListeners",this).call(this)}}])&&k(t.prototype,n),c}(m);function L(e){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==L(t)&&"function"!=typeof t?O(e):t}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e,t,n){return(x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function T(e){return(T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function c(e,t){var n,r,o=t.textImage,u=t.photoImage;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,e))._textImage=o,r._photoImage=u,x((n=O(r),T(c.prototype)),"setEventListeners",n).call(n),r}return t=c,(n=[{key:"open",value:function(e,t){this._photoImage.src=t,this._photoImage.alt=e,this._textImage.textContent=e,x(T(c.prototype),"open",this).call(this)}}])&&q(t.prototype,n),c}(m);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderElements",value:function(){var e=this;this._items.reverse().forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&A(t.prototype,n),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){var n=t.nameSelector,r=t.jobSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=document.querySelector(n),this._jobSelector=document.querySelector(r),this._avatarSelector=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(e,t){this._nameSelector.textContent=e,this._jobSelector.textContent=t,this._avatarSelector.alt=e}}])&&R(t.prototype,n),e}();function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkStatus)}},{key:"receiveCardsInServer",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkStatus)}},{key:"upCardsToTheServer",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkStatus)}},{key:"editInfoUser",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkStatus)}},{key:"deleteCards",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkStatus)}},{key:"editAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkStatus)}},{key:"putLikes",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkStatus)}},{key:"deleteLikes",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkStatus)}},{key:"_checkStatus",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}}])&&V(t.prototype,n),e}())({url:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{Authorization:"ef54f240-380e-482d-82be-6a3e691e6be6","content-type":"application/json"}});Promise.all([N.receiveCardsInServer(),N.getInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var c,u=e[Symbol.iterator]();!(r=(c=u.next()).done)&&(n.push(c.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];new B({items:o,renderer:function(e){H(e,i._id)}},".cards").renderElements(o),y.src=i.avatar,U.setUserInfo(i.name,i.about)})).catch((function(e){console.log(e)}));var U=new D({nameSelector:".profile__author",jobSelector:".profile__description",avatarSelector:".profile__image"}),M=new w(".popup",(function(){U.setUserInfo(u.value,a.value),J(!1,f,"Cохранение..."),N.editInfoUser(u.value,a.value).finally((function(e){return J(!1,f,"Сохранить")})),M.close()})),J=function(e,t,n){t.textContent=n},G=new w(".delete__cards",(function(e){})),H=function(e,n){var r=new t({item:e,handleCardClick:function(){K.open(e.name,e.link)},checkLikes:function(t){!function(e,t,n){e.target.classList.contains("cards__like_active")?N.deleteLikes(t).then((function(t){e.target.classList.remove("cards__like_active"),n._likeCount(t.likes)})).catch((function(e){console.log(e)})):N.putLikes(t).then((function(t){e.target.classList.add("cards__like_active"),n._likeCount(t.likes)})).catch((function(e){console.log(e)}))}(t,e._id,r)},deletedCards:function(){N.deleteCards(e._id).then((function(e){r._deleteCards()})).catch((function(e){console.log(e)}))}},"#cards__template",G,N),o=r.generateCard();r.checkForId(n),r.checkMyLikes(n),_.prepend(o)},z=new w(".popup__avatar",(function(e){J(!0,d,"Сохранение..."),N.editAvatar(e.link).then((function(e){y.src=e.avatar})).catch((function(e){console.log(e)})).finally((function(e){return J(!1,d,"Сохранить")}))})),$=new w("#cards__popup",(function(e){J(!0,p,"Создание..."),N.upCardsToTheServer(e.name,e.link).then((function(e){H(e,e.owner._id)})).catch((function(e){console.log(e)})).finally((function(e){return J(!1,p,"Cоздать")}))})),K=new P(".photo",{textImage:l,photoImage:s});c.addEventListener("click",(function(){W.buttonActive(),$.open()})),i.addEventListener("click",(function(){u.value=U.getUserInfo().name,a.value=U.getUserInfo().job,M.open(),Q.buttonFalse()})),h.addEventListener("click",(function(){z.open()}));var Q=new r(o.formSelector,o);Q.enableValidation();var W=new r(o.formSelectorCards,o);W.enableValidation(),new r(o.formSelectorAvatar,o).enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,